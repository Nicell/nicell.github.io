/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import { HTMLStencilElement, JSXBase } from '@stencil/core/internal';
import {
  IconLookup,
  IconName,
} from '@fortawesome/fontawesome-svg-core';
import {
  project,
  skillSet,
} from './common/types';

export namespace Components {
  interface AppAbout {}
  interface AppAnim {
    'anim': 'up' | 'right' | 'left';
    'delay': number;
    'distance': string;
    'duration': number;
  }
  interface AppBrowserPreview {
    'direction': 'left' | 'right';
    'site': string;
  }
  interface AppFooter {}
  interface AppHome {}
  interface AppIcon {
    'class'?: string;
    'icon': IconLookup | IconName;
  }
  interface AppImg {
    'alt': string;
    'src': string;
    'type': 'jpg' | 'png';
  }
  interface AppProject {
    'config': project;
  }
  interface AppSection {}
  interface AppSkills {
    'skills': skillSet[];
  }
  interface AppSkillsPanel {
    'config': skillSet;
  }
  interface AppUpdate {}
}

declare global {


  interface HTMLAppAboutElement extends Components.AppAbout, HTMLStencilElement {}
  var HTMLAppAboutElement: {
    prototype: HTMLAppAboutElement;
    new (): HTMLAppAboutElement;
  };

  interface HTMLAppAnimElement extends Components.AppAnim, HTMLStencilElement {}
  var HTMLAppAnimElement: {
    prototype: HTMLAppAnimElement;
    new (): HTMLAppAnimElement;
  };

  interface HTMLAppBrowserPreviewElement extends Components.AppBrowserPreview, HTMLStencilElement {}
  var HTMLAppBrowserPreviewElement: {
    prototype: HTMLAppBrowserPreviewElement;
    new (): HTMLAppBrowserPreviewElement;
  };

  interface HTMLAppFooterElement extends Components.AppFooter, HTMLStencilElement {}
  var HTMLAppFooterElement: {
    prototype: HTMLAppFooterElement;
    new (): HTMLAppFooterElement;
  };

  interface HTMLAppHomeElement extends Components.AppHome, HTMLStencilElement {}
  var HTMLAppHomeElement: {
    prototype: HTMLAppHomeElement;
    new (): HTMLAppHomeElement;
  };

  interface HTMLAppIconElement extends Components.AppIcon, HTMLStencilElement {}
  var HTMLAppIconElement: {
    prototype: HTMLAppIconElement;
    new (): HTMLAppIconElement;
  };

  interface HTMLAppImgElement extends Components.AppImg, HTMLStencilElement {}
  var HTMLAppImgElement: {
    prototype: HTMLAppImgElement;
    new (): HTMLAppImgElement;
  };

  interface HTMLAppProjectElement extends Components.AppProject, HTMLStencilElement {}
  var HTMLAppProjectElement: {
    prototype: HTMLAppProjectElement;
    new (): HTMLAppProjectElement;
  };

  interface HTMLAppSectionElement extends Components.AppSection, HTMLStencilElement {}
  var HTMLAppSectionElement: {
    prototype: HTMLAppSectionElement;
    new (): HTMLAppSectionElement;
  };

  interface HTMLAppSkillsElement extends Components.AppSkills, HTMLStencilElement {}
  var HTMLAppSkillsElement: {
    prototype: HTMLAppSkillsElement;
    new (): HTMLAppSkillsElement;
  };

  interface HTMLAppSkillsPanelElement extends Components.AppSkillsPanel, HTMLStencilElement {}
  var HTMLAppSkillsPanelElement: {
    prototype: HTMLAppSkillsPanelElement;
    new (): HTMLAppSkillsPanelElement;
  };

  interface HTMLAppUpdateElement extends Components.AppUpdate, HTMLStencilElement {}
  var HTMLAppUpdateElement: {
    prototype: HTMLAppUpdateElement;
    new (): HTMLAppUpdateElement;
  };
  interface HTMLElementTagNameMap {
    'app-about': HTMLAppAboutElement;
    'app-anim': HTMLAppAnimElement;
    'app-browser-preview': HTMLAppBrowserPreviewElement;
    'app-footer': HTMLAppFooterElement;
    'app-home': HTMLAppHomeElement;
    'app-icon': HTMLAppIconElement;
    'app-img': HTMLAppImgElement;
    'app-project': HTMLAppProjectElement;
    'app-section': HTMLAppSectionElement;
    'app-skills': HTMLAppSkillsElement;
    'app-skills-panel': HTMLAppSkillsPanelElement;
    'app-update': HTMLAppUpdateElement;
  }
}

declare namespace LocalJSX {
  interface AppAbout extends JSXBase.HTMLAttributes<HTMLAppAboutElement> {}
  interface AppAnim extends JSXBase.HTMLAttributes<HTMLAppAnimElement> {
    'anim'?: 'up' | 'right' | 'left';
    'delay'?: number;
    'distance'?: string;
    'duration'?: number;
  }
  interface AppBrowserPreview extends JSXBase.HTMLAttributes<HTMLAppBrowserPreviewElement> {
    'direction'?: 'left' | 'right';
    'site'?: string;
  }
  interface AppFooter extends JSXBase.HTMLAttributes<HTMLAppFooterElement> {}
  interface AppHome extends JSXBase.HTMLAttributes<HTMLAppHomeElement> {}
  interface AppIcon extends JSXBase.HTMLAttributes<HTMLAppIconElement> {
    'class'?: string;
    'icon'?: IconLookup | IconName;
  }
  interface AppImg extends JSXBase.HTMLAttributes<HTMLAppImgElement> {
    'alt'?: string;
    'src'?: string;
    'type'?: 'jpg' | 'png';
  }
  interface AppProject extends JSXBase.HTMLAttributes<HTMLAppProjectElement> {
    'config'?: project;
  }
  interface AppSection extends JSXBase.HTMLAttributes<HTMLAppSectionElement> {}
  interface AppSkills extends JSXBase.HTMLAttributes<HTMLAppSkillsElement> {
    'skills'?: skillSet[];
  }
  interface AppSkillsPanel extends JSXBase.HTMLAttributes<HTMLAppSkillsPanelElement> {
    'config'?: skillSet;
  }
  interface AppUpdate extends JSXBase.HTMLAttributes<HTMLAppUpdateElement> {}

  interface IntrinsicElements {
    'app-about': AppAbout;
    'app-anim': AppAnim;
    'app-browser-preview': AppBrowserPreview;
    'app-footer': AppFooter;
    'app-home': AppHome;
    'app-icon': AppIcon;
    'app-img': AppImg;
    'app-project': AppProject;
    'app-section': AppSection;
    'app-skills': AppSkills;
    'app-skills-panel': AppSkillsPanel;
    'app-update': AppUpdate;
  }
}

export { LocalJSX as JSX };


declare module "@stencil/core" {
  export namespace JSX {
    interface IntrinsicElements extends LocalJSX.IntrinsicElements {}
  }
}


