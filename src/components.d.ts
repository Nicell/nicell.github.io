/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import '@stencil/core';


import {
  IconLookup,
  IconName,
} from '@fortawesome/fontawesome-svg-core';
import {
  project,
  skillSet,
} from './common/types';


export namespace Components {

  interface AppAbout {}
  interface AppAboutAttributes extends StencilHTMLAttributes {}

  interface AppBrowserPreview {
    'direction': 'left' | 'right';
    'site': string;
  }
  interface AppBrowserPreviewAttributes extends StencilHTMLAttributes {
    'direction'?: 'left' | 'right';
    'site'?: string;
  }

  interface AppFooter {}
  interface AppFooterAttributes extends StencilHTMLAttributes {}

  interface AppHome {}
  interface AppHomeAttributes extends StencilHTMLAttributes {}

  interface AppIcon {
    'class'?: string;
    'icon': IconLookup | IconName;
  }
  interface AppIconAttributes extends StencilHTMLAttributes {
    'class'?: string;
    'icon'?: IconLookup | IconName;
  }

  interface AppImg {
    'alt': string;
    'src': string;
    'type': 'jpg' | 'png';
  }
  interface AppImgAttributes extends StencilHTMLAttributes {
    'alt'?: string;
    'src'?: string;
    'type'?: 'jpg' | 'png';
  }

  interface AppProject {
    'config': project;
  }
  interface AppProjectAttributes extends StencilHTMLAttributes {
    'config'?: project;
  }

  interface AppSection {}
  interface AppSectionAttributes extends StencilHTMLAttributes {}

  interface AppSkillsPanel {
    'config': skillSet;
  }
  interface AppSkillsPanelAttributes extends StencilHTMLAttributes {
    'config'?: skillSet;
  }

  interface AppSkills {
    'skills': skillSet[];
  }
  interface AppSkillsAttributes extends StencilHTMLAttributes {
    'skills'?: skillSet[];
  }
}

declare global {
  interface StencilElementInterfaces {
    'AppAbout': Components.AppAbout;
    'AppBrowserPreview': Components.AppBrowserPreview;
    'AppFooter': Components.AppFooter;
    'AppHome': Components.AppHome;
    'AppIcon': Components.AppIcon;
    'AppImg': Components.AppImg;
    'AppProject': Components.AppProject;
    'AppSection': Components.AppSection;
    'AppSkillsPanel': Components.AppSkillsPanel;
    'AppSkills': Components.AppSkills;
  }

  interface StencilIntrinsicElements {
    'app-about': Components.AppAboutAttributes;
    'app-browser-preview': Components.AppBrowserPreviewAttributes;
    'app-footer': Components.AppFooterAttributes;
    'app-home': Components.AppHomeAttributes;
    'app-icon': Components.AppIconAttributes;
    'app-img': Components.AppImgAttributes;
    'app-project': Components.AppProjectAttributes;
    'app-section': Components.AppSectionAttributes;
    'app-skills-panel': Components.AppSkillsPanelAttributes;
    'app-skills': Components.AppSkillsAttributes;
  }


  interface HTMLAppAboutElement extends Components.AppAbout, HTMLStencilElement {}
  var HTMLAppAboutElement: {
    prototype: HTMLAppAboutElement;
    new (): HTMLAppAboutElement;
  };

  interface HTMLAppBrowserPreviewElement extends Components.AppBrowserPreview, HTMLStencilElement {}
  var HTMLAppBrowserPreviewElement: {
    prototype: HTMLAppBrowserPreviewElement;
    new (): HTMLAppBrowserPreviewElement;
  };

  interface HTMLAppFooterElement extends Components.AppFooter, HTMLStencilElement {}
  var HTMLAppFooterElement: {
    prototype: HTMLAppFooterElement;
    new (): HTMLAppFooterElement;
  };

  interface HTMLAppHomeElement extends Components.AppHome, HTMLStencilElement {}
  var HTMLAppHomeElement: {
    prototype: HTMLAppHomeElement;
    new (): HTMLAppHomeElement;
  };

  interface HTMLAppIconElement extends Components.AppIcon, HTMLStencilElement {}
  var HTMLAppIconElement: {
    prototype: HTMLAppIconElement;
    new (): HTMLAppIconElement;
  };

  interface HTMLAppImgElement extends Components.AppImg, HTMLStencilElement {}
  var HTMLAppImgElement: {
    prototype: HTMLAppImgElement;
    new (): HTMLAppImgElement;
  };

  interface HTMLAppProjectElement extends Components.AppProject, HTMLStencilElement {}
  var HTMLAppProjectElement: {
    prototype: HTMLAppProjectElement;
    new (): HTMLAppProjectElement;
  };

  interface HTMLAppSectionElement extends Components.AppSection, HTMLStencilElement {}
  var HTMLAppSectionElement: {
    prototype: HTMLAppSectionElement;
    new (): HTMLAppSectionElement;
  };

  interface HTMLAppSkillsPanelElement extends Components.AppSkillsPanel, HTMLStencilElement {}
  var HTMLAppSkillsPanelElement: {
    prototype: HTMLAppSkillsPanelElement;
    new (): HTMLAppSkillsPanelElement;
  };

  interface HTMLAppSkillsElement extends Components.AppSkills, HTMLStencilElement {}
  var HTMLAppSkillsElement: {
    prototype: HTMLAppSkillsElement;
    new (): HTMLAppSkillsElement;
  };

  interface HTMLElementTagNameMap {
    'app-about': HTMLAppAboutElement
    'app-browser-preview': HTMLAppBrowserPreviewElement
    'app-footer': HTMLAppFooterElement
    'app-home': HTMLAppHomeElement
    'app-icon': HTMLAppIconElement
    'app-img': HTMLAppImgElement
    'app-project': HTMLAppProjectElement
    'app-section': HTMLAppSectionElement
    'app-skills-panel': HTMLAppSkillsPanelElement
    'app-skills': HTMLAppSkillsElement
  }

  interface ElementTagNameMap {
    'app-about': HTMLAppAboutElement;
    'app-browser-preview': HTMLAppBrowserPreviewElement;
    'app-footer': HTMLAppFooterElement;
    'app-home': HTMLAppHomeElement;
    'app-icon': HTMLAppIconElement;
    'app-img': HTMLAppImgElement;
    'app-project': HTMLAppProjectElement;
    'app-section': HTMLAppSectionElement;
    'app-skills-panel': HTMLAppSkillsPanelElement;
    'app-skills': HTMLAppSkillsElement;
  }


  export namespace JSX {
    export interface Element {}
    export interface IntrinsicElements extends StencilIntrinsicElements {
      [tagName: string]: any;
    }
  }
  export interface HTMLAttributes extends StencilHTMLAttributes {}

}
